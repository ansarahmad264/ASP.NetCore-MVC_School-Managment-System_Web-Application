@model List<ExamResult>

@{
    ViewData["Title"] = "Exam Results";
    int passMark = 40; // Customize pass mark here
}

<div class="container mt-5">
    <div class="card shadow-lg border-0 rounded-4">
        <div class="card-header bg-primary text-white rounded-top-4">
            <h3 class="mb-0">Exam Results</h3>
        </div>
        <div class="card-body p-4">
            @if (Model != null && Model.Any())
            {
                foreach (var exam in Model)
                {
                    var totalMarks = exam.SubjectMarks.Sum(m => m.TotalMarks);
                    var totalObtained = exam.SubjectMarks.Sum(m => m.ObtainedMarks);
                    var average = exam.SubjectMarks.Any() ? (totalObtained * 100.0 / totalMarks) : 0;

                    <div class="mb-5">
                        <h5 class="text-secondary">@exam.Term</h5>

                        <table class="table table-bordered table-striped">
                            <thead class="table-dark">
                                <tr>
                                    <th>Subject</th>
                                    <th>Marks Obtained</th>
                                    <th>Total Marks</th>
                                    <th>Percentage</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var subject in exam.SubjectMarks)
                                {
                                    var percentage = (subject.TotalMarks == 0) ? 0 : (subject.ObtainedMarks * 100.0 / subject.TotalMarks);
                                    bool isPass = subject.ObtainedMarks >= passMark;
                                    string rowClass = isPass ? "" : "table-danger";

                                    <tr class="@rowClass">
                                        <td>@subject.SubjectName</td>
                                        <td>@subject.ObtainedMarks</td>
                                        <td>@subject.TotalMarks</td>
                                        <td>@percentage.ToString("F2")%</td>
                                        <td>@(isPass ? "Pass" : "Fail")</td>
                                    </tr>
                                }
                                <!-- Summary Row -->
                                <tr class="table-info fw-bold">
                                    <td colspan="1">Total</td>
                                    <td>@totalObtained</td>
                                    <td>@totalMarks</td>
                                    <td>@average.ToString("F2")%</td>
                                    <td>Avg. Score</td>
                                </tr>
                            </tbody>
                        </table>

                        <!-- Optional Bar Chart for Visuals -->
                        <canvas id="chart-@exam.ExamResultId" width="400" height="200"></canvas>

                        <script>
                            const ctx@exam.ExamResultId = document.getElementById('chart-@exam.ExamResultId').getContext('2d');
                            new Chart(ctx@exam.ExamResultId, {
                                type: 'bar',
                                data: {
                                    labels: [@string.Join(", ", exam.SubjectMarks.Select(s => $"\"{s.SubjectName}\""))],
                                    datasets: [{
                                        label: 'Marks Obtained',
                                        data: [@string.Join(", ", exam.SubjectMarks.Select(s => s.ObtainedMarks))],
                                        backgroundColor: 'rgba(54, 162, 235, 0.6)',
                                        borderColor: 'rgba(54, 162, 235, 1)',
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        y: {
                                            beginAtZero: true,
                                            max: 100
                                        }
                                    }
                                }
                            });
                        </script>
                    </div>
                }
            }
            else
            {
                <p class="text-muted">No exam results available for this enrollment.</p>
            }

            <a asp-action="SearchStudent" asp-controller="Student" class="btn btn-secondary mt-3">Back to Student Search</a>
        </div>
    </div>
</div>

<!-- Include Chart.js from CDN -->
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
}
